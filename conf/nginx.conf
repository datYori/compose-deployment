server {
  listen         80 default_server;
  listen         [::]:80 ipv6only=on;
  return 301 https://${PUBLIC_ADDRESS}:${PROXY_HTTPS_PORT}$request_uri;
}

server {
  listen              443 ssl http2 default_server;
  listen              [::]:443 ssl http2 default_server;

  ssl_certificate     /certs/proxy.crt;
  ssl_certificate_key /certs/proxy.key;

  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout  10m;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;

  proxy_redirect     off;
  proxy_send_timeout 3600s;
  proxy_read_timeout 3600s;

  proxy_set_header   Host ${PUBLIC_ADDRESS};
  proxy_set_header   X-Real-IP $remote_addr;
  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

  # The original host requested by the client in the Host HTTP request header.
  # We have to add the port here as well, otherwise it is not added in the redirection.
  proxy_set_header   X-Forwarded-Host   ${PUBLIC_ADDRESS}:${PROXY_HTTPS_PORT};

  # The INTERNAL hostname of the proxy server.
  proxy_set_header   X-Forwarded-Server proxy;

  # The following is expected to be the original, external port used and protocols.
  proxy_set_header   X-Forwarded-Port   ${PROXY_HTTPS_PORT};
  proxy_set_header   X-Forwarded-Proto  $scheme;

  location /api/executor/ {
    proxy_pass http://executor:54321/;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api/creds/ {
    proxy_pass http://creds:54322/;
  }

  location /api/storage/ {
    proxy_pass http://storage:54323/;
  }

  location / {
    proxy_pass http://frontend:9000/;
  }
}

